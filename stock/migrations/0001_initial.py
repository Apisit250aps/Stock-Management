# Generated by Django 4.2.3 on 2023-09-19 13:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AreaData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area_name', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_status', models.IntegerField(choices=[(1, 'shop'), (2, 'customer')])),
                ('customer_code', models.CharField(max_length=16)),
                ('customer_name', models.CharField(max_length=256)),
                ('customer_post_code', models.CharField(max_length=5)),
                ('customer_province', models.CharField(max_length=256)),
                ('customer_district', models.CharField(max_length=256)),
                ('customer_subdistrict', models.CharField(max_length=256)),
                ('customer_detail_address', models.CharField(max_length=256)),
                ('customer_tel', models.CharField(max_length=10)),
                ('customer_fax', models.CharField(max_length=10)),
                ('customer_email', models.CharField(max_length=64)),
                ('customer_remark', models.TextField(default='-')),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DBCounter',
            fields=[
                ('counter_type', models.CharField(max_length=16, primary_key=True, serialize=False, unique=True)),
                ('counter_number', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='ProductData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_code', models.CharField(max_length=16, null=True, unique=True)),
                ('product_name', models.CharField(max_length=256)),
                ('product_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('product_desc', models.TextField(default='-')),
                ('product_unit', models.IntegerField(default=1)),
                ('product_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('product_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.productcategory')),
            ],
        ),
        migrations.CreateModel(
            name='ProductTypeData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_code', models.CharField(max_length=256, null=True)),
                ('type_name', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='TempInputDB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice', models.CharField(max_length=16)),
                ('invoice_no', models.CharField(max_length=16)),
                ('product', models.CharField(max_length=16)),
                ('quantity', models.IntegerField()),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('discount', models.DecimalField(decimal_places=2, max_digits=8)),
            ],
        ),
        migrations.CreateModel(
            name='TempOutputDB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice', models.CharField(max_length=16)),
                ('invoice_no', models.CharField(max_length=16)),
                ('product', models.CharField(max_length=16)),
                ('quantity', models.IntegerField()),
                ('sale_price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('discount', models.DecimalField(decimal_places=2, max_digits=8)),
            ],
        ),
        migrations.CreateModel(
            name='ShopData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_status', models.IntegerField(choices=[(1, 'shop'), (2, 'customer')])),
                ('shop_code', models.CharField(max_length=16, null=True, unique=True)),
                ('shop_name', models.CharField(max_length=256)),
                ('shop_contact', models.CharField(max_length=64)),
                ('shop_post_code', models.CharField(max_length=5)),
                ('shop_province', models.CharField(max_length=256)),
                ('shop_district', models.CharField(max_length=256)),
                ('shop_subdistrict', models.CharField(max_length=256)),
                ('shop_detail_address', models.CharField(max_length=256)),
                ('shop_tel', models.CharField(max_length=10)),
                ('shop_fax', models.CharField(max_length=10)),
                ('shop_email', models.CharField(max_length=64)),
                ('shop_remark', models.TextField(default='-')),
                ('shop_latitude', models.FloatField(blank=True, null=True)),
                ('shop_longitude', models.FloatField(blank=True, null=True)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('shop_area_code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.areadata')),
                ('shop_product_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='stock.producttypedata')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductShop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.productdata')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.shopdata')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products')),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.productdata')),
            ],
        ),
        migrations.CreateModel(
            name='ProductDelete',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_code', models.CharField(max_length=16)),
                ('del_unit', models.IntegerField()),
                ('del_date', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.productdata')),
            ],
        ),
        migrations.AddField(
            model_name='productcategory',
            name='product_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.producttypedata'),
        ),
        migrations.CreateModel(
            name='OutputInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_no', models.CharField(max_length=16, null=True, unique=True)),
                ('total_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('discount', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('remark', models.TextField(default='-')),
                ('input_date', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.customerdata')),
            ],
        ),
        migrations.CreateModel(
            name='OutputData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_no', models.CharField(max_length=16, null=True)),
                ('quantity', models.IntegerField()),
                ('sale_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('discount', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.outputinvoice')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.productdata')),
            ],
        ),
        migrations.CreateModel(
            name='InputInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_no', models.CharField(max_length=16, null=True, unique=True)),
                ('total_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('total_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('total_discount', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('remark', models.TextField(default='-')),
                ('input_date', models.DateTimeField(auto_now_add=True)),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.shopdata')),
            ],
        ),
        migrations.CreateModel(
            name='InputData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_no', models.CharField(max_length=16, null=True)),
                ('quantity', models.IntegerField()),
                ('unit_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('unit_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('discount', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.inputinvoice')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.productdata')),
            ],
        ),
        migrations.CreateModel(
            name='DBDateCounter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('counter_number', models.IntegerField()),
                ('counter_date', models.DateTimeField(auto_now_add=True)),
                ('counter_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.dbcounter')),
            ],
        ),
    ]
